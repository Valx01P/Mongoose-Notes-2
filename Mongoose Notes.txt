!<-intro-> 

mongoose //make sure your mongodb server is active

>show dbs
>use fruitsDB
>db.dropDatabase()	//delete database
>show dbs

>npm i mongoose

//<-1->

>show dbs
>use fruitsDB
>show collections

//<-2->//

>show collections
>db.people.find()

//<-3->//

>node app.js
<Succesfully saved all the fruits o fruitsDB

>db.fruits.find()


------------------------------------------------------
//<-1->//

//jshint esversion:6

const mongoose = require('mongoose');

// connects to database stated, if there is none it makes it

mongoose.connect("mongodb://localhost:27017/fruitsDB", { useNewUrlParser: true });

//create new schema

const fruitSchema = new mongoose.Schema ({
	name: String,
	rating: Number,
	review: String
});

const Fruit = mongoose.model("Fruit", fruitSchema);

//create new document from model

const fruit = new Fruit ({
	name: "Apple",
	rating: 7,
	review: "Pretty solid as a fruit."
});

//saves fruit document into a fruits collection inside our fruit db
//makes a new addition everytime, you may want to comment it out after the first use

fruit.save()

//<-1 , 2->//

const personSchema = new mongoose.Schema ({
	name: String,
	age: Number
});

const Person = mongoose.model("Person", )

const person = new Person({
	name: "John",
	age: 37
});

person.save();

//<-2 , 3->//

const kiwi = new Fruit({
	name:"Kiwi",
	score: 10,
	review: "The best fruit!"
});

const orange = new Fruit({
	name:"Orange",
	score: 4,
	review: "Too sour for me"
});

const banana = new Fruit({
	name:"Banna",
	score: 3,
	review: "Wierd texture"
});

//comment this part out to avoid adding more than once ^^^

Fruit.insertMany([kiwi, orange, banana], function(err){	//you can read this on the api model
if (err) {
	console.log(err);
} else {
	console.log("Succesfully saved all the fruits to fruitsDB");
}
});

//<-3, 4->//

//!<-intro, reading from your database w/ mongoose->
------------------------------------------------------

//viewing the data

Fruit.find(function(err, fruits){
if (err) {
	console.log(err);
} else {
	
	mongoose.connection.close();

	fruits.forEach(function(fruit){
	console.log(fruit.name);
	});
}
});

//<-4->//
//!<-data validation->//
------------------------------------------------------

//check git branch on data-validation //
//!<-updating and deleting data->//

------------------------------------------------------

Fruit.updateOne({_id: "itwillsayitontheCLI"}, {name:"Peach"}. function(err){
if (err){
	console.log(err);
} else {
	console.log("Succesfully updated the document");
}
});


//delete one entry

Fruit.deleteOne({name: "Peach"}, function(err){
if (err){
	console.log(err);
} else {
	console.log("Succesfully deleted the document");
}
});	
})

//delete many

Person.deleteMany({name: "John"}, function(err){
if (err) {
	console.log(err);
} else {
	console.log("Succesfully deleted all the documents");
}
})

------------------------------------------------------
//established and embedded relationships, updated

const Person = mongoose.model("Person", personSchema);

const mango = new Fruit({
	name: "Mango",
	score: 6,
	review: "Decent fruit."
});

mango.save();

Person.updateOne({name: "John"), (favoriteFruit: mango}, function(err){
if (err) {
	console.log(err);
} else {
	console.log("Succesfully updated the document");
}
});
